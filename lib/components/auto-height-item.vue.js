"use strict";const e=require("vue"),c=require("@vueuse/core"),d=require("./grid-item.vue.js"),m=e.defineComponent({__name:"auto-height-item",props:{isDraggable:{type:Boolean,default:null},isResizable:{type:Boolean,default:null},isBounded:{type:Boolean,default:null},static:{type:Boolean,default:!1},minH:{type:Number,default:1},minW:{type:Number,default:1},maxH:{type:Number,default:1/0},maxW:{type:Number,default:1/0},x:{type:Number,required:!0},y:{type:Number,required:!0},w:{type:Number,required:!0},h:{type:Number,required:!0},i:{type:[Number,String],required:!0},dragIgnoreFrom:{type:String,default:"a, button"},dragAllowFrom:{type:String,default:null},resizeIgnoreFrom:{type:String,default:"a, button"},preserveAspectRatio:{type:Boolean,default:!1},dragOption:{type:Object,default:()=>({})},resizeOption:{type:Object,default:()=>({})},rowHeight:{type:Number,default:30},margin:{type:Array,default:()=>[10,10]}},emits:["update:h"],setup(i,{emit:l}){const r=i,s=l,n=e.ref(null),a=e.ref(0),p=e.computed(()=>{if(a.value<=0)return r.minH;const t=r.margin[1],u=Math.ceil((a.value+t)/(r.rowHeight+t));return Math.min(Math.max(u,r.minH),r.maxH)}),o=c.useResizeObserver(n,t=>{const u=t[0];u&&(a.value=u.contentRect.height)});return e.watch(()=>p.value,t=>{t!==r.h&&s("update:h",t)}),e.onMounted(()=>{if(n.value){const t=n.value.clientHeight;t>0&&(a.value=t)}}),e.onBeforeUnmount(()=>{o&&o.stop()}),(t,u)=>(e.openBlock(),e.createBlock(d,e.normalizeProps(e.guardReactiveProps({...r})),{default:e.withCtx(()=>[e.createElementVNode("div",{ref_key:"contentRef",ref:n},[e.renderSlot(t.$slots,"default")],512)]),_:3},16))}});module.exports=m;
//# sourceMappingURL=auto-height-item.vue.js.map
