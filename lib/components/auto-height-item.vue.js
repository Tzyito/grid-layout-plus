"use strict";const e=require("vue"),p=require("@vueuse/core"),f=e.defineComponent({__name:"auto-height-item",props:{h:{type:Number,required:!0},rowHeight:{type:Number,default:30},margin:{type:Array,default:()=>[10,10]},minH:{type:Number,default:1},maxH:{type:Number,default:1/0}},emits:["update:h"],setup(i,{emit:u}){const r=i,c=e.useAttrs(),s=u,a=e.ref(null),o=e.ref(0),m=e.computed(()=>{if(o.value<=0)return r.minH;const t=r.margin[1],n=Math.ceil((o.value+t)/(r.rowHeight+t));return Math.min(Math.max(n,r.minH),r.maxH)});return p.useResizeObserver(a,t=>{const n=t[0];n&&(o.value=n.contentRect.height)}),e.watch(()=>m.value,t=>{t!==r.h&&s("update:h",t)}),(t,n)=>{const l=e.resolveComponent("GridItem");return e.openBlock(),e.createBlock(l,e.normalizeProps(e.guardReactiveProps({...e.unref(c),...r})),{default:e.withCtx(()=>[e.createElementVNode("div",{ref_key:"contentRef",ref:a},[e.renderSlot(t.$slots,"default")],512)]),_:3},16)}}});module.exports=f;
//# sourceMappingURL=auto-height-item.vue.js.map
